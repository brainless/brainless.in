---
export interface Project {
	name: string;
	description: string | null;
	url: string;
	stars: number;
	languages: Record<string, number>;
	summary: string;
	last_updated: string;
}

export interface Props {
	project: Project;
}

const { project } = Astro.props;

const topLanguages = Object.entries(project.languages)
	.sort(([, a], [, b]) => b - a)
	.slice(0, 3)
	.map(([lang]) => lang);
---

<div class="border border-gray-200 rounded-lg p-4 mb-4">
    <div class="flex items-center justify-between mb-2">
        <h3 class="text-xl font-bold">
            <a href={project.url} target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:underline">
                {project.name}
            </a>
        </h3>
        <span class="text-xs font-semibold text-gray-500 border border-gray-300 rounded-full px-2 py-0.5">Public</span>
    </div>
    {project.description && <p class="text-gray-700 text-sm mb-4">{project.description}</p>}
    <div class="flex items-center text-sm text-gray-500">
        <div class="flex items-center mr-6">
            <svg class="w-4 h-4 mr-1 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z"></path>
            </svg>
            <span>{project.stars}</span>
        </div>
        <div class="flex">
            {topLanguages.map(lang => (
                <div class="flex items-center mr-4">
                    <span class="h-3 w-3 rounded-full bg-gray-400 mr-2"></span>
                    <span>{lang}</span>
                </div>
            ))}
        </div>
        <span class="ml-auto text-xs">Updated {new Date(project.last_updated).toLocaleDateString()}</span>
    </div>
</div>
